// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tournament {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  matches     Match[]
  participants Participant[]
}

model Participant {
  id            String   @id @default(cuid())
  name          String
  tournamentId  String
  tournament    Tournament @relation(fields: [tournamentId], references: [id])
  player1Matches Match[] @relation("Player1")
  player2Matches Match[] @relation("Player2")
  winnerMatches  Match[] @relation("Winner")
  positions     Position[]
}

model Match {
  id           String   @id @default(cuid())
  tournamentId String
  round        Int
  matchType    String   @default("normal") // "normal" or "third_place"
  player1Id    String
  player2Id    String
  winnerId     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tournament   Tournament  @relation(fields: [tournamentId], references: [id])
  player1      Participant @relation("Player1", fields: [player1Id], references: [id])
  player2      Participant @relation("Player2", fields: [player2Id], references: [id])
  winner       Participant? @relation("Winner", fields: [winnerId], references: [id])
  positions    Position[]
}

model Position {
  id          String   @id @default(cuid())
  name        String   // 例: "東", "西", "南", "北"
  matchId     String
  match       Match    @relation(fields: [matchId], references: [id])
  participantId String
  participant Participant @relation(fields: [participantId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
